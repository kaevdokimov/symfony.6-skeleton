services:
  nginx:
    image: nginx:mainline-alpine3.20-slim
    container_name: ss-nginx
    ports:
      - "8080:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
      - database
  php:
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile
    container_name: ss-php83
    ports:
      - "9000:9000"
    volumes:
      - ./:/var/www
    depends_on:
      - database
      - redis
###> symfony/mailer ###
  mailer:
    image: axllent/mailpit:latest
    container_name: ss-mailer
    ports:
      - "1025:1025"
      - "8025:8025"
    environment:
      MP_SMTP_AUTH_ACCEPT_ANY: 1
      MP_SMTP_AUTH_ALLOW_INSECURE: 1
###< symfony/mailer ###
  ###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine3.20
    container_name: ss-db
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_USER: ${POSTGRES_USER:-app}
      POSTGRES_PASSWORD: ${POSTGRES_PASS:-app-pwd}
    ports:
      - "5432:5432"
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

#  rabbitmq:
#    image: rabbitmq:3.13-management-alpine
#    hostname: rabbitmq
#    restart: always
#    container_name: ss-rabbitmq
#    environment:
#      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER:-app}
#      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS:-app-pwd}
#      RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: -rabbit log_levels [{connection,error},{default,error}] disk_free_limit 2147483648
#    ports:
#      - 5672:5672
#      - 15672:15672
#    volumes:
#      - ./var/rabbitmq/data/:/var/lib/rabbitmq/
#      - ./var/rabbitmq/log/:/var/log/rabbitmq

  redis:
    image: redis:7.4.1-alpine3.20
    container_name: ss-redis
    restart: always
    ports:
      - '${REDIS_PORT:-6379}:6379'
    environment:
      REDIS_PORT: ${REDIS_PORT:-6379}
    command: ["redis-server", "--requirepass", "${REDIS_PASS}", "--appendonly", "no", "--maxmemory", "500mb", "--maxmemory-policy", "allkeys-lru"]
    volumes:
      - redis-data:/var/lib/redis

volumes:
  ###> doctrine/doctrine-bundle ###
  database_data:
  redis-data:
###< doctrine/doctrine-bundle ###
